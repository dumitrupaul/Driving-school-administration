/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proiect.bd.pkgfinal;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Jamez-Laptop
 */
public class MasinaVizualizare extends javax.swing.JPanel {

    DefaultTableModel model;
    public MasinaVizualizare() {
        initComponents();
        
        model = (DefaultTableModel)jTable1.getModel();
        update();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jScrollPane1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jScrollPane1FocusGained(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IDMasina", "Numar", "KmTotali", "Model"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable1PropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getAccessibleContext().setAccessibleParent(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jScrollPane1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jScrollPane1FocusGained
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_jScrollPane1FocusGained

    private void jTable1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable1PropertyChange
        if ("tableCellEditor".equals(evt.getPropertyName())) {
            if (jTable1.isEditing()==false)
            updateTable((JTable)evt.getSource());
        }
    }//GEN-LAST:event_jTable1PropertyChange

    private void updateTable(javax.swing.JTable obj) {
        Connection cm = new Connection();
        int i = obj.getEditingRow();
                            
        try {
            cm.execute("Update Masina" +
                      " set numar='"+model.getValueAt(i,1)+"' , kmtotali="+model.getValueAt(i,2)+" , model='"+
                      model.getValueAt(i,3)+"' where idmasina="+model.getValueAt(i,0));
        } catch (SQLException ex) {
            Logger.getLogger(ProiectBDFinal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void update(){
        try {
            Connection cm = new Connection();
            
            ResultSet rs = cm.exQuery("SELECT * FROM Masina");
            
            //sterge tabelul anterior
            while(model.getRowCount()>0){
                model.removeRow(0);
            }
            
            //ascude prima coloana
            TableColumn id = jTable1.getColumn("IDMasina");
            id.setMaxWidth(0);
            id.setMinWidth(0);
            id.setPreferredWidth(0);
            
            //populeaza tabelul
            while(rs.next()) {
                model.insertRow(model.getRowCount(),new Object[]{
                rs.getString("IDMasina"),rs.getString("Numar"),rs.getString("KmTotali"),rs.getString("Model")});
            }
            cm.closeChannel(rs);
        } catch (SQLException ex) {
            Logger.getLogger(ProiectBDFinal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public int getId(){
        return Integer.parseInt((String) model.getValueAt(jTable1.getSelectedRow(), 0));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
